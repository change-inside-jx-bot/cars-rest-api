{{- if .Values.knativeDeploy }}
{{- else }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    draft: {{ default "draft-app" .Values.draft }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        draft: {{ default "draft-app" .Values.draft }}
        app: {{ template "fullname" . }}
{{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
  {{- if .Values.mongodb.enabled }}
            - name: DATABASE_HOST
              value: {{ template {{ .Chart.Name }}".mongodb.fullname" . }}
            - name: DATABASE_PORT
              value: "27017"
            - name: DATABASE_USER
              value: {{ .Values.mongodb.mongodbUsername | quote }}
            - name: DATABASE_PASSWORD
              value: {{ .Values.mongodb.mongodbPassword | quote }}
              # valueFrom:
              #   secretKeyRef:
              #     name: {{ template "node.mongodb.fullname" . }}
              #     key: mongodb-password
            - name: DATABASE_NAME
              value: {{ .Values.mongodb.mongodbDatabase | quote }}
            - name: DATABASE_CONNECTION_OPTIONS
              value: ""
            {{- else }}
            {{- $type := dict "type" .Values.externaldb.type }}
            - name: DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ template "node.secretName" . }}
                  key: {{ template "externaldb.host" $type }}
    {{- end }}
        ports:
        - containerPort: {{ .Values.service.internalPort }}
        livenessProbe:
          httpGet:
            path: {{ .Values.probePath }}
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
        readinessProbe:
          httpGet:
            path: {{ .Values.probePath }}
            port: {{ .Values.service.internalPort }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
        resources:
{{ toYaml .Values.resources | indent 12 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
{{- end }}